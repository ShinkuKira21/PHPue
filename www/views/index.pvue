<script>   
    $age = 40;
    $fruits = ["Banana", "Apple", "Cherry"];
    $counter = 20;

    $bFillFormBtnHidden = $_SESSION['bFillFormBtnHidden'] ?? false;
    
    $_SESSION['bFillFormBtnHidden'] = false;

    @AJAX('POST')
    function hideFormButton()
    {
        file_put_contents('debug.txt', "üü¢ hideFormButton() called\n", FILE_APPEND);
        file_put_contents('debug.txt', "üü¢ Session status: " . session_status() . "\n", FILE_APPEND);
    }

    @AJAX('GET')
    function setSession()
    {
        file_put_contents('debug.txt', "üü¢ setSession() called\n", FILE_APPEND);
        file_put_contents('debug.txt', "üü¢ Session status: " . session_status() . "\n", FILE_APPEND);
    }
    
</script>

<header>
    <title>Home</title>
    <meta name="description" content="PHPue leverages PHP server-side rendering, and can create affordable web applications">
    <meta name="keywords" content="PHP, VUE, PHPue">
    <meta name="author" content="Edward Patch">
</header>

<template>
    <div>
        <p>Debug: bFillFormBtnHidden = <?= $bFillFormBtnHidden ? 'true' : 'false' ?></p>
        <p>Session: <?= isset($_SESSION['bFillFormBtnHidden']) ? 'true' : 'false' ?></p>
    </div>
    <div class="min-h-screen bg-gradient-to-br from-gray-50 to-blue-50 py-8">
        <div class="max-w-4xl mx-auto px-4">
            <!-- Header -->
            <div class="text-center mb-12">
                <h1 class="text-4xl font-bold text-gray-800 mb-4">üöÄ PHPue - THE PHP RENAISSANCE IS HERE!</h1>
                <p class="text-lg text-gray-600">PHPue Demo - Server-side rendering with Vue-like syntax</p>
            </div>

             <!-- Fill Out a Form Button -->
            <div p-if="!$bFillFormBtnHidden" class="text-center mb-12">
                <div onclick="callPHPMethod('hideFormButton')" class="inline-flex items-center px-8 py-4 bg-gradient-to-r from-phpue-blue to-blue-600 hover:from-blue-600 hover:to-phpue-blue text-white font-bold text-lg rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1">
                    <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                    </svg>
                    Fill Out a Form
                </div>
            </div>

            <!-- Data Cards Grid -->
            <div class="grid md:grid-cols-2 gap-6 mb-8">
                <!-- JavaScript Age Card -->
                <div class="bg-white rounded-xl shadow-lg p-6 border-l-4 border-pink-500">
                    <div class="flex items-center mb-4">
                        <div class="w-3 h-3 bg-pink-500 rounded-full mr-3"></div>
                        <h3 class="text-lg font-semibold text-gray-800">Client-Side JavaScript</h3>
                    </div>
                    <p class="text-pink-500 font-medium mb-2">JS Age:</p>
                    <p class="text-3xl font-bold text-gray-700"><span id="age"></span></p>
                </div>

                <!-- PHP Age Card -->
                <div class="bg-white rounded-xl shadow-lg p-6 border-l-4 border-blue-500">
                    <div class="flex items-center mb-4">
                        <div class="w-3 h-3 bg-blue-500 rounded-full mr-3"></div>
                        <h3 class="text-lg font-semibold text-gray-800">Server-Side PHP</h3>
                    </div>
                    <p class="text-blue-500 font-medium mb-2">PHP Age:</p>
                    <p class="text-3xl font-bold text-gray-700">{{$age}}</p>
                </div>
            </div>

            <!-- PHP to JS Data Bridge -->
            <div class="bg-white rounded-xl shadow-lg p-6 mb-8 border-l-4 border-green-500">
                <div class="flex items-center mb-4">
                    <div class="w-3 h-3 bg-green-500 rounded-full mr-3"></div>
                    <h3 class="text-lg font-semibold text-gray-800">PHP ‚Üí JavaScript Bridge</h3>
                </div>
                <p class="text-green-500 font-medium mb-2">PHP Array Injected into JavaScript:</p>
                <div class="bg-gray-50 p-4 rounded-lg border">
                    <p id="fruit" class="text-lg text-gray-700 font-mono"></p>
                </div>
            </div>

            <!-- Dynamic Fruit List -->
            <div class="bg-white rounded-xl shadow-lg p-6 mb-8 border-l-4 border-purple-500">
                <div class="flex items-center mb-4">
                    <div class="w-3 h-3 bg-purple-500 rounded-full mr-3"></div>
                    <h3 class="text-lg font-semibold text-gray-800">Dynamic List (p-for)</h3>
                </div>
                <p class="text-purple-500 font-medium mb-4">Fruits from PHP Array:</p>
                <ul class="space-y-3">
                    <li p-for="$fruit in $fruits" 
                        class="flex items-center p-3 bg-gray-50 rounded-lg border border-gray-200 hover:bg-gray-100 transition-colors">
                        <span class="w-2 h-2 bg-emerald-400 rounded-full mr-3"></span>
                        <span class="text-gray-700 font-medium">{{ $fruit }}</span>
                    </li>
                </ul>
            </div>

            <!-- Counter Display -->
            <div class="bg-white rounded-xl shadow-lg p-6 border-l-4 border-orange-500">
                <div class="flex items-center mb-4">    location.reload();

                    <div class="w-3 h-3 bg-orange-500 rounded-full mr-3"></div>
                    <h3 class="text-lg font-semibold text-gray-800">PHP Variable in JavaScript</h3>
                </div>
                <p id="counter" class="text-2xl font-bold text-orange-500"></p>
            </div>
        </div>
    </div>
</template>

<cscript>
    let age = 27;
    let ageContainer = document.getElementById("age");
    ageContainer.innerText = age;

    let fruit = {{$fruits}};
    let fruitContainer = document.getElementById("fruit");
    fruitContainer.innerText = fruit;

    let counter = {{$counter}};
    let counterContainer = document.getElementById("counter");
    counterContainer.innerText = "Counter: " + counter;

    async function callPHPMethod(methodName) {
        console.log("üî¥ START: callPHPMethod", methodName);
        
        try {
            const response = await fetch('', {
                method: 'POST',
                headers: {'Content-Type': 'application/json'},
                body: JSON.stringify({action: methodName})
            });
            
            console.log("üü¢ AJAX Response Status:", response.status);
            
            if (response.status === 200) {
                console.log("üü¢ AJAX processed successfully, reloading...");
            }

            window.location.reload();
            
        } catch (error) {
            console.log("‚ùå AJAX Error:", error);
        }
    }
</cscript>